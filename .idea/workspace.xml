<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="15080e35-8aab-4107-a3ae-2f2fc5697d74" name="Changes" comment="Implement pagination for comments&#10;&#10;- Add pagination to the list_comments view to display 25 comments per page&#10;- Update list_comments.html template to use page_obj for paginated comments&#10;- Add pagination controls to list_comments.html for navigating between pages&#10;- Style pagination controls with CSS for better user experience&#10;&#10;This commit adds pagination functionality to the comments section, allowing users to navigate through comments in a paginated manner. Each page displays up to 25 comments, with navigation controls to move between pages.">
      <change afterPath="$PROJECT_DIR$/media/files/arc_recovery_packet_aCaMliU.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/media/images/photo_2024-04-27_12-46-19_KFmzJTQ.jpg" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/comments/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/comments/views.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/templates/list_comments.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/list_comments.html" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="HTML File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;reeeade&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/reeeade/SPA_Comment.git&quot;,
    &quot;accountId&quot;: &quot;1f690fb5-a142-4698-9079-7df08c64cc67&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2gSPx7vV9fZZqEINNij9JkjTxCV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;Django Server.SPA_Comment.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenDjangoStructureViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.pycharm.django.structure.promotion.once.per.project&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;django.template.preview.state&quot;: &quot;SHOW_EDITOR&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Gleb/PycharmProjects/SPA_Comment/comments&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Gleb\PycharmProjects\SPA_Comment\comments" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Gleb\PycharmProjects\SPA_Comment\templates\comments" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="SPA_Comment" type="Python.DjangoServer" factoryName="Django server">
      <module name="SPA_Comment" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="DJANGO_SETTINGS_MODULE" value="SPA_Comment.settings" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="launchJavascriptDebuger" value="false" />
      <option name="port" value="8000" />
      <option name="host" value="localhost" />
      <option name="additionalOptions" value="" />
      <option name="browserUrl" value="" />
      <option name="runTestServer" value="false" />
      <option name="runNoReload" value="false" />
      <option name="useCustomRunCommand" value="false" />
      <option name="customRunCommand" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-PY-241.14494.241" />
        <option value="bundled-python-sdk-0509580d9d50-28c9f5db9ffe-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.14494.241" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="15080e35-8aab-4107-a3ae-2f2fc5697d74" name="Changes" comment="" />
      <created>1715688248552</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715688248552</updated>
      <workItem from="1715688250029" duration="97000" />
      <workItem from="1715853475555" duration="23135000" />
      <workItem from="1715876908214" duration="1884000" />
      <workItem from="1716033762769" duration="13152000" />
      <workItem from="1716069556927" duration="1040000" />
      <workItem from="1716123862156" duration="12837000" />
      <workItem from="1716228186598" duration="167000" />
      <workItem from="1716388786416" duration="2227000" />
    </task>
    <task id="LOCAL-00001" summary="Initial commit - Setup project structure and implement comments functionality with CAPTCHA&#10;&#10;- Initialize Django project and application structure&#10;- Create User and Comment models to support basic comment functionality&#10;- Implement form classes (UserForm, CommentForm) for user and comment creation&#10;- Add support for nested comments using recursive template inclusion&#10;- Integrate django-simple-captcha for spam protection on comment forms&#10;- Create views for listing comments, adding comments, and replying to comments&#10;- Implement templates for displaying and adding comments (add_comment.html, list_comments.html, replies.html)&#10;- Ensure proper URL routing with namespacing for comments and CAPTCHA&#10;- Add basic CSS styling for templates to improve visual appearance&#10;&#10;This commit sets up the initial structure of the Django project, adds the ability to post comments and replies, and integrates CAPTCHA protection to prevent spam submissions. The project now supports nested comments and basic form validation.">
      <option name="closed" value="true" />
      <created>1715878515163</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1715878515163</updated>
    </task>
    <task id="LOCAL-00002" summary="Implement file and image upload functionality&#10;&#10;- Add fields for image and file uploads to the Comment model&#10;- Add validation for image size (500KB limit), format (JPG, GIF, PNG), and resizing images if they exceed 320x240 pixels&#10;- Add validation for text file size (100KB limit) and format (TXT only)&#10;- Update CommentForm to handle image and file uploads with validation&#10;- Update views to handle file and image uploads&#10;- Create and update templates (list_comments.html, replies.html) to display uploaded images and files&#10;- Configure MEDIA_URL and MEDIA_ROOT for handling media files&#10;- Ensure media files are served correctly in development by updating urlpatterns&#10;&#10;This commit adds functionality for users to upload images and text files along with their comments. Images are validated for size and format, and resized if necessary. Text files are validated for size and format. Templates are updated to display these files appropriately.">
      <option name="closed" value="true" />
      <created>1716051580934</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1716051580934</updated>
    </task>
    <task id="LOCAL-00003" summary="Implement pagination for comments&#10;&#10;- Add pagination to the list_comments view to display 25 comments per page&#10;- Update list_comments.html template to use page_obj for paginated comments&#10;- Add pagination controls to list_comments.html for navigating between pages&#10;- Style pagination controls with CSS for better user experience&#10;&#10;This commit adds pagination functionality to the comments section, allowing users to navigate through comments in a paginated manner. Each page displays up to 25 comments, with navigation controls to move between pages.">
      <option name="closed" value="true" />
      <created>1716138652278</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1716138652278</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Initial commit - Setup project structure and implement comments functionality with CAPTCHA&#10;&#10;- Initialize Django project and application structure&#10;- Create User and Comment models to support basic comment functionality&#10;- Implement form classes (UserForm, CommentForm) for user and comment creation&#10;- Add support for nested comments using recursive template inclusion&#10;- Integrate django-simple-captcha for spam protection on comment forms&#10;- Create views for listing comments, adding comments, and replying to comments&#10;- Implement templates for displaying and adding comments (add_comment.html, list_comments.html, replies.html)&#10;- Ensure proper URL routing with namespacing for comments and CAPTCHA&#10;- Add basic CSS styling for templates to improve visual appearance&#10;&#10;This commit sets up the initial structure of the Django project, adds the ability to post comments and replies, and integrates CAPTCHA protection to prevent spam submissions. The project now supports nested comments and basic form validation." />
    <MESSAGE value="Implement file and image upload functionality&#10;&#10;- Add fields for image and file uploads to the Comment model&#10;- Add validation for image size (500KB limit), format (JPG, GIF, PNG), and resizing images if they exceed 320x240 pixels&#10;- Add validation for text file size (100KB limit) and format (TXT only)&#10;- Update CommentForm to handle image and file uploads with validation&#10;- Update views to handle file and image uploads&#10;- Create and update templates (list_comments.html, replies.html) to display uploaded images and files&#10;- Configure MEDIA_URL and MEDIA_ROOT for handling media files&#10;- Ensure media files are served correctly in development by updating urlpatterns&#10;&#10;This commit adds functionality for users to upload images and text files along with their comments. Images are validated for size and format, and resized if necessary. Text files are validated for size and format. Templates are updated to display these files appropriately." />
    <MESSAGE value="Implement pagination for comments&#10;&#10;- Add pagination to the list_comments view to display 25 comments per page&#10;- Update list_comments.html template to use page_obj for paginated comments&#10;- Add pagination controls to list_comments.html for navigating between pages&#10;- Style pagination controls with CSS for better user experience&#10;&#10;This commit adds pagination functionality to the comments section, allowing users to navigate through comments in a paginated manner. Each page displays up to 25 comments, with navigation controls to move between pages." />
    <option name="LAST_COMMIT_MESSAGE" value="Implement pagination for comments&#10;&#10;- Add pagination to the list_comments view to display 25 comments per page&#10;- Update list_comments.html template to use page_obj for paginated comments&#10;- Add pagination controls to list_comments.html for navigating between pages&#10;- Style pagination controls with CSS for better user experience&#10;&#10;This commit adds pagination functionality to the comments section, allowing users to navigate through comments in a paginated manner. Each page displays up to 25 comments, with navigation controls to move between pages." />
  </component>
</project>